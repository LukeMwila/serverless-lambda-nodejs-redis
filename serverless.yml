service: sls-cms-users

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-west-1
  memorySize: 128
  timeout: 3
  
plugins:
  - serverless-dotenv-plugin
  - serverless-offline

custom:
  allowedHeaders:
    - Accept
    - Content-Type
    - Content-Length
    - Authorization
  stage: ${opt:stage, self:provider.stage}

functions:
  create-user:
    handler: api/v1/create-user.handler
    description: POST /api/v1/users
    events:
      - http:
          path: api/v1/users
          method: post
          cors:
            origin: '*'
            headers: ${self:custom.allowedHeaders}

  get-users:
    handler: api/v1/get-users.handler
    description: GET /api/v1/users
    events:
      - http:
          path: api/v1/users
          method: get
          cors:
            origin: '*'
            headers: ${self:custom.allowedHeaders}  

  get-user:
    handler: api/v1/get-user.handler
    description: GET /api/v1/users/{userId}
    events:
      - http:
          path: api/v1/users/{userId}
          method: get
          request:
            parameters:
              paths:
                userId: true
          cors:
            origin: '*'
            headers: ${self:custom.allowedHeaders}

  update-user:
    handler: api/v1/update-user.handler
    description: PUT /api/v1/users/{userId}
    events:
      - http:
          path: api/v1/users/{userId}
          method: put
          request:
            parameters:
              paths:
                userId: true
          cors:
            origin: '*'
            headers: ${self:custom.allowedHeaders}

  delete-user:
    handler: api/v1/delete-user.handler
    description: DELETE /api/v1/users/{userId}
    events:
      - http:
          path: api/v1/users/{userId}
          method: delete
          request:
            parameters:
              paths:
                userId: true
          cors:
            origin: '*'
            headers: ${self:custom.allowedHeaders}